-- PRODUCT--
CREATE TABLE product_type (
  id INT AUTO_INCREMENT PRIMARY KEY,
  prod_type VARCHAR(50) NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE operator (
  id INT AUTO_INCREMENT PRIMARY KEY,
  op_name VARCHAR(50) NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE products (
  id INT AUTO_INCREMENT PRIMARY KEY,
  prod_type_id INT NOT NULL,
  operator_id INT NOT NULL,
  prod_code VARCHAR(50) NOT NULL,
  prod_name VARCHAR(100) NOT NULL,
  prod_status SMALLINT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (prod_type_id) REFERENCES product_type(id),
  FOREIGN KEY (operator_id) REFERENCES operator(id)
);

CREATE TABLE product_description (
  id INT AUTO_INCREMENT PRIMARY KEY,
  prod_desc TEXT NOT NULL,
  prod_id INT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (prod_id) REFERENCES products(id)
);

-- ETC--
CREATE TABLE payment_methods (
  id INT AUTO_INCREMENT PRIMARY KEY,
  pay_method VARCHAR(255) NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE users (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  alamat VARCHAR(255) NOT NULL,
  tanggal_lahir DATE NOT NULL,
  status_user VARCHAR(10) NOT NULL,
  gender CHAR(1) NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE transactions (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT NOT NULL,
  payment_method_id INT NOT NULL,
  trans_status VARCHAR(10) NOT NULL,
  total_barang INT NOT NULL,
  total_harga NUMERIC(25,2) NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES users(id),
  FOREIGN KEY (payment_method_id) REFERENCES payment_methods(id)
);

CREATE TABLE transaction_details (
  transaction_id INT NOT NULL,
  prod_id INT NOT NULL,
  detail_status VARCHAR(10) NOT NULL,
  total_barang INT NOT NULL,
  total_harga NUMERIC(25,2) NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (transaction_id) REFERENCES transactions(id),
  FOREIGN KEY (prod_id) REFERENCES products(id)
);

-- NO7--
CREATE TABLE payment_method_description (
  id INT AUTO_INCREMENT PRIMARY KEY,
  pay_method_id INT NOT NULL,
  pay_desc TEXT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (pay_method_id) REFERENCES payment_methods(id)
);

CREATE TABLE alamat (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT NOT NULL,
  alamat VARCHAR(255) NOT NULL,
  kota VARCHAR(255) NOT NULL,
  provinsi VARCHAR(255) NOT NULL,
  kode_pos VARCHAR(10) NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE user_payment_method_detail (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT NOT NULL,
  pay_method_id INT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES users(id),
  FOREIGN KEY (pay_method_id) REFERENCES payment_methods(id)
);